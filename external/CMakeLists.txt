cmake_minimum_required(VERSION 3.7.0 FATAL_ERROR)
project (TAMM_DEPENDENCIES C CXX Fortran)

if(BUILD_OLD_TAMM)
    option (BUILD_GA "This will build blas+lapack if required" OFF)
else()
    option (BUILD_GA "This will build blas+lapack if required" ON)
endif()

if(DEFINED NWX_PROC_COUNT)
    set(NWX_PROC_COUNT ${NWX_PROC_COUNT})
else()
    include(ProcessorCount)
    ProcessorCount(NWX_PROC_COUNT)
    message(STATUS "Number of cores detected = ${NWX_PROC_COUNT}")
endif()

message(STATUS "Using ${NWX_PROC_COUNT} cores for building TAMM dependencies.")
message("Please set the NWX_PROC_COUNT cmake variable to change the cpu count.")

if (CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)
    set (CMAKE_INSTALL_PREFIX "${PROJECT_BINARY_DIR}/tamm-deps" CACHE PATH "default install path" FORCE)
endif()

set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${PROJECT_SOURCE_DIR}/cmake/")

include(ExternalProject)

if(BUILD_GA)

    if (NOT BLAS_LIBRARIES)
        include(blas_lapack)
    else()
        add_custom_target(BLAS_LAPACK ALL)
    endif()

    ExternalProject_Add (TAMM_DEPS
            DEPENDS BLAS_LAPACK
            SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}
            BINARY_DIR ${CMAKE_CURRENT_BINARY_DIR}
            CMAKE_ARGS -DBUILD_GA=OFF 
            INSTALL_COMMAND cmake -E echo "Finished building all TAMM dependencies!"
            )
    return()

else()

    include(libint)
    include(eigen)
    if (BUILD_OLD_TAMM)
        include(blas_lapack)
        #include(globalarrays)
    else()    
        #include(blas_lapack)
        include(globalarrays)
    endif()
    include(antlr)
    include(googletest)

    set(TAMM_TOOLCHAIN_FILE "${PROJECT_BINARY_DIR}/tamm_build.cmake")
    file(WRITE ${TAMM_TOOLCHAIN_FILE} "#This file is automatically generated. Please do not edit it. \n")

    file(APPEND ${TAMM_TOOLCHAIN_FILE} "set(CMAKE_BUILD_TYPE ${CMAKE_BUILD_TYPE}) \n")
    file(APPEND ${TAMM_TOOLCHAIN_FILE} "set(NWX_PROC_COUNT ${NWX_PROC_COUNT}) \n")
    file(APPEND ${TAMM_TOOLCHAIN_FILE} "set(CMAKE_C_COMPILER ${CMAKE_C_COMPILER}) \n")
    file(APPEND ${TAMM_TOOLCHAIN_FILE} "set(CMAKE_CXX_COMPILER ${CMAKE_CXX_COMPILER}) \n")
    file(APPEND ${TAMM_TOOLCHAIN_FILE} "set(CMAKE_Fortran_COMPILER ${CMAKE_Fortran_COMPILER}) \n")
    file(APPEND ${TAMM_TOOLCHAIN_FILE} "set(TAMM_DEPENDENCIES_INSTALL_PREFIX ${CMAKE_INSTALL_PREFIX}) \n")
    file(APPEND ${TAMM_TOOLCHAIN_FILE} "set(CMAKE_EXPORT_COMPILE_COMMANDS ${CMAKE_EXPORT_COMPILE_COMMANDS}) \n\n")

    file(APPEND ${TAMM_TOOLCHAIN_FILE} "set(LIBINT_INSTALL_PATH ${LIBINT_INSTALL_PATH}) \n")
    file(APPEND ${TAMM_TOOLCHAIN_FILE} "set(ANTLR_CPPRUNTIME_PATH ${ANTLR_CPPRUNTIME_PATH}) \n")
    file(APPEND ${TAMM_TOOLCHAIN_FILE} "set(EIGEN3_INSTALL_PATH ${EIGEN3_INSTALL_PATH}) \n")
    file(APPEND ${TAMM_TOOLCHAIN_FILE} "set(GTEST_INSTALL_PATH ${GTEST_INSTALL_PATH}) \n\n")
    file(APPEND ${TAMM_TOOLCHAIN_FILE} "set(TALSH_INSTALL_PATH ${TALSH_INSTALL_PATH}) \n")

    if (BLAS_LIBRARIES AND LAPACK_LIBRARIES)
        file(APPEND ${TAMM_TOOLCHAIN_FILE} "set(BLAS_LIBRARIES ${BLAS_LIBRARIES}) \n")
        file(APPEND ${TAMM_TOOLCHAIN_FILE} "set(LAPACK_LIBRARIES ${LAPACK_LIBRARIES}) \n")
    endif()

    if(SCALAPACK_LIBRARIES)
        file(APPEND ${TAMM_TOOLCHAIN_FILE} "set(SCALAPACK_LIBRARIES ${SCALAPACK_LIBRARIES}) \n\n")
    endif()

    if (BLAS_INCLUDE_PATH AND BLAS_LIBRARY_PATH)
        file(APPEND ${TAMM_TOOLCHAIN_FILE} "set(BLAS_INCLUDE_PATH ${BLAS_INCLUDE_PATH}) \n")
        file(APPEND ${TAMM_TOOLCHAIN_FILE} "set(BLAS_LIBRARY_PATH ${BLAS_LIBRARY_PATH}) \n")
    else()
        file(APPEND ${TAMM_TOOLCHAIN_FILE} "set(BLAS_INCLUDE_PATH ${CMAKE_INSTALL_PREFIX}/blas_lapack/include) \n")
        file(APPEND ${TAMM_TOOLCHAIN_FILE} "set(BLAS_LIBRARY_PATH ${CMAKE_INSTALL_PREFIX}/blas_lapack/lib) \n")
        file(APPEND ${TAMM_TOOLCHAIN_FILE} "set(BLAS_LIBRARY64_PATH ${CMAKE_INSTALL_PREFIX}/blas_lapack/lib64) \n")
    endif()

    if(BUILD_OLD_TAMM)
        file(APPEND ${TAMM_TOOLCHAIN_FILE} "set(NWCHEM_TOP ${NWCHEM_TOP}) \n")
        file(APPEND ${TAMM_TOOLCHAIN_FILE} "set(GA_CONFIG ${GA_CONFIG}) \n")
        file(APPEND ${TAMM_TOOLCHAIN_FILE} "set(NWCHEM_BUILD_DIR ${NWCHEM_BUILD_DIR}) \n")
        file(APPEND ${TAMM_TOOLCHAIN_FILE} "set(NWCHEM_BUILD_TARGET ${NWCHEM_BUILD_TARGET}) \n")        
        file(APPEND ${TAMM_TOOLCHAIN_FILE} "set(NWCHEM_CMAKE_BUILD ${NWCHEM_CMAKE_BUILD}) \n")
    else()
        file(APPEND ${TAMM_TOOLCHAIN_FILE} "set(GA_INSTALL_PATH ${CMAKE_INSTALL_PREFIX}/ga) \n")
        file(APPEND ${TAMM_TOOLCHAIN_FILE} "set(MPI_INCLUDE_PATH ${MPI_INCLUDE_PATH}) \n")
        file(APPEND ${TAMM_TOOLCHAIN_FILE} "set(MPI_LIBRARY_PATH ${MPI_LIBRARY_PATH}) \n")
        file(APPEND ${TAMM_TOOLCHAIN_FILE} "set(MPI_LIBRARIES ${MPI_LIBRARIES}) \n")
    endif()

endif()
